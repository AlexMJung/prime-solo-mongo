//Create a collection named orders.
db.createCollection('orders');

//Insert at least 3 documents that represent orders. IMPORTANT: See section below for fields. Order dates should be: 2017-02-03, 2017-04-04, 2017-01-02
//We did this 3 times
db.orders.insert(
{
    orderDate: new Date('2017-01-02'),
    orderTotal: 150,
    lineItems: 
    [
        {
        unitPrice:25.00,
        quantity:6,
        productName: 'Books'
        }
    ] 
}
);

//Find all orders and make them look pretty.
db.orders.find().pretty();


//Find all orders with an orderDate that is after 1/31/2017.
db.orders.find({orderDate:{$gt:new Date('2017-01-31')}});


//Change the orderTotal from 2/3/2017 to 63 dollars (you do NOT have to ensure the lineItems' unitPrice * quantity add up to the orderTotal)
db.orders.update({_id: ObjectId("599ef861ce35182b1f03e1a4")},
{$set: {orderTotal: 63}});

//Add another lineItem to the order from 4/4/2017
db.orders.update({_id: ObjectId("599f044cce35182b1f03e1a8")}, {$push: {lineItems: {unitPrice: 2, quantity:4, productName:'suckers'}}});


//Change the first lineItem in the order from 1/2/2017 to be for 2 'transistor radio's



//Find orders with lineItems that have a quantity that is less than 10, but greater than 2. You will have to research $and